name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  php:
    name: PHP ${{ matrix.php-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.4', '8.0']
    steps:
      - uses: actions/checkout@v2
      - name: Use PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: curl
      - name: Validate composer.json and composer.lock
        run: composer validate
      - if: ${{ matrix.php-version == '7.4' }}
        name: Install locked dependencies (PHP 7.4)
        run: composer install --prefer-dist --no-progress
      - if: ${{ matrix.php-version != '7.4' }}
        name: Install upgraded/downgraded dependencies
        run: composer update --prefer-dist --no-progress
      - name: Run test suite
        run: composer run-script test

  php-phpcs:
    name: PHP_CodeSniffer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: curl
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
      - name: Configure PHPCS
        run: ./vendor/squizlabs/php_codesniffer/bin/phpcs --config-set ignore_warnings_on_exit 1
      - name: Run check suite
        run: composer run-script cs-check

  php-phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: curl
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
      - name: Run check suite
        run: composer run-script analyze

  js-build:
    name: Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build:global --if-present
      - run: npm run build:admin --if-present

  js-eslint:
    name: Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 15.x
      - run: npm ci
      - run: npm lint
